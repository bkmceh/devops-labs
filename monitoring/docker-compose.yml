version: '3.7'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "100m"
    max-file: "10"
    tag: "{{.ImageName}}|{{.Name}}"

services:

  grafana:
    image: grafana/grafana:9.1.8
    container_name: monitoring.grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - VIRTUAL_HOST=monitoring.grafana
      - VIRTUAL_PORT=3000
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - monitoring.network
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging

  promtail:
    image: grafana/promtail:2.6.1
    container_name: monitoring.promtail
    expose:
      - 9080
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-data:/var/lib/promtail/positions
      - ${PWD}/promtail/promtail.yml:/etc/promtail/promtail.yml
    command:
      - '-config.file=/etc/promtail/promtail.yml'
    restart: unless-stopped
    networks:
      - monitoring.network
      - app_python
      - app_java
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging

  loki:
    container_name: monitoring.loki
    image: grafana/loki:2.6.1
    expose:
      - 3100
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/tmp/loki/
    restart: unless-stopped
    networks:
      - monitoring.network
    labels:
      org.label-schema.group: "monitoring"
    logging: *default-logging

  prometheus:
    image: prom/prometheus:v2.39.1
    volumes:
      - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default

  app_python:
    container_name: app_python
    image: inforest/app_python:app_python
    ports:
      - "5000:5000"
    restart: unless-stopped
    logging: *default-logging
    networks:
      - app_python

  app_java:
    container_name: app_java
    image: inforest/app_java:app_java
    ports:
      - "8080:8080"
    restart: unless-stopped
    logging: *default-logging
    networks:
      - app_java

networks:
  app_python:
  app_java:
  monitoring.network:

volumes:
  grafana-data: { }
  loki-data: { }
  promtail-data: { }
  prometheus-data: { }
